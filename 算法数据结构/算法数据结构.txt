排序算法稳定性：
冒泡排序可以实现成稳定的：
插入排序也可以实现成稳定的
选择排序做不到稳定的
归并排序可以做到稳定的
快排做不到稳定性（其实也可以，但是超级超级难！！！）
堆排也做不到稳定性

工程中排序：
<60直接用插入排序，因为常数项低，
归并排序-->从稳定性出发的
栈（后进先出）：push和pop
队列（先进先出）：push和poll
栈顶就是楼顶
队首就是最先进队列那个

冒泡排序：BubbleSort
插入排序：InsertSort
选择排序：SelectionSort
归并排序：Merge
小和问题：SmallSum
逆序对：Reverse
荷兰国旗：NetherlandsFlog
随机快排：QuickSort
堆排：HeapSort
桶排序：MaxGap（找出数组中最大差值）
静态数组实现栈和栈：Array_To_Stack_Queue
仅用队列结构实现栈结构：StackAndQueueConvert
仅用栈结构实现队列结构：StackAndQueueConvert
实现一个特殊的栈，在实现栈的基本功能的基础上，再实现返回栈中最小元素的操作：GetMinStack
实现一种狗猫队列的结构：DogCatQueue
转圈打印矩阵：PrintMatrixSpiralOrder
旋转正方形矩阵：RotateMatrix
之字形打印矩阵：ZigZagPrintMatrix
已知有序二维数组，找数：FindNumInSortedMatrix
打印两个链表中公共的部分：PrintCommonPart
判断一个链表是否为回文结构：IsPalindromeList（三种方法，额外空间分别为n,n/2,1）
	补充：正常笔试，怎么方便怎么写，要是面试要用额外空间复杂度为O(1)的，水平高！

做题时：
要么从数据状况出发，要么从本身问法出发，最有可能会找出最优解









